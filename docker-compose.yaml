version: '3.8'

services:
  theatre-db:
    image: postgres:13.0-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data/
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - "5432"
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:9.1.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 10s
      retries: 10

  init-elasticsearch:
    image: curlimages/curl:7.85.0
    volumes:
      - ./es_schema.json:/app/es_schema.json
      - ./init-es.sh:/app/init-es.sh
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: ["/app/init-es.sh"]
    
  etl:
    build:
      context: ./postgres_to_es
    restart: on-failure
    depends_on:
      theatre-db:
        condition: service_healthy
      init-elasticsearch:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    env_file:
      - ./.env

volumes:
  pg_data:
  es_data:
